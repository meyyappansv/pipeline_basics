pipeline {
    agent any
    environment {
        VERSION = "0.1.0"        
        VERSION_RC = "rc.2"
    }
    parameters{
        booleanParam(name: 'RC', defaultValue: false,description: 'Chooses wether we need to generate RC candidate' )
    }
    stages {
        stage('Audit tools') {                        
            steps {
                sh '''
                  git version
                 
                '''
            }
        }
        stage ('Checkout Code'){
            steps{
            git url: 'https://github.com/meyysevugan/jgsu-spring-petclinic.git', branch: 'main'
            }
        }
        stage('Build') {
            steps {
              echo "Building version: ${VERSION} with suffix: ${VERSION_RC}"
              sh './mvnw clean compile'
            
            }
        }
        stage('Unit Test') {
            steps {
              sh './mvnw clean test'
            }
        }
        stage('Get Input'){
        
        input {
                message 'Deploy?'
                ok 'Do it!'
                parameters {
                    string(name: 'RELEASE_VERSION', defaultValue: 'false', description: 'is this release version')
                }
            }

            steps{
                echo "Getting input for release version"
            }
        
        }
        stage('Package') {
            when {
                expression { return params.RELEASE_VERSION == 'true'; }
            }
            steps {
                sh './mvnw clean package'
                archiveArtifacts './target/*.jar'
            }
        }
    }
}